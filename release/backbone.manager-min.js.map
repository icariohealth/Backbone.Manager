{"version":3,"sources":["backbone.manager.js"],"names":["Backbone","_","$","window","Manager","_watchForStateChange","cachedOptionalMatcher","cachedParamMatcher","currentManager","managerQueue","managers","onloadUrl","extend","Events","location","href","router","options","push","this","_parseStates","_parseEvents","initialize","prototype","states","events","each","keys","_this","stateKey","matches","stateOptions","templateUrl","transitionMethod","Error","url","isRegExp","_urlParams","results","exec","replace","_urlAsTemplate","template","interpolate","_urlAsRegex","_routeToRegExp","route","_routeCallbackChooser","Array","apply","arguments","listenTo","params","transitionOptions","_handleTransitionCallback","historyHasUpdated","_getWindowHref","_handleLoadCallback","error","loadMethod","trigger","_error","data","paramsObject","queryParams","navigate","object","last","indexOf","map","initial","String","Object","_extractParameters","eventName","on","_parseStateFromUrl","find","reverse","ref","test","state","go","goByUrl","parsedUrl","path","urlParser","document","createElement","pathname","search","slice","manager","Model","config","event","$target","stateAttr","stateInfo","isDefaultPrevented","currentTarget","attr","preventDefault","JSON","parse","split","length"],"mappings":"CAOA,SAAUA,EAAUC,EAAGC,EAAGC,GACxB,GAAIC,GAASC,EAAsBC,EAAuBC,EAAoBC,EAAgBC,EAAcC,EAAUC,CACtHD,MACAD,EAAeR,EAAEW,UAAWZ,EAASa,QACrCF,EAAYR,EAAOW,SAASC,KAC5BR,EAAqB,oBACrBD,EAAwB,UACxBE,EAAiB,KACjBJ,EAAU,WAKR,QAASA,GAAQY,EAAQC,GACvBP,EAASQ,KAAKC,MACdA,KAAKH,OAASA,EACdf,EAAEW,OAAOO,KAAMnB,EAASa,QACxBM,KAAKC,eACLD,KAAKE,eACLF,KAAKG,WAAWL,GAkMlB,MA5MAb,GAAQmB,UAAUC,UAElBpB,EAAQmB,UAAUE,UAYlBrB,EAAQmB,UAAUD,WAAa,aAE/BlB,EAAQmB,UAAUH,aAAe,WAC/BnB,EAAEyB,KAAKzB,EAAE0B,KAAKR,KAAKK,QAAS,SAAUI,GACpC,MAAO,UAASC,GACd,GAAIC,GAASC,EAAcC,CAE3B,IADAD,EAAeH,EAAMJ,OAAOK,IACvBE,EAAaE,iBAChB,KAAM,IAAIC,OAAML,EAAW,sCAE7B,IAAIE,EAAaI,IAAK,CACpB,GAAIlC,EAAEmC,SAASL,EAAaI,KAC1B,KAAM,IAAID,OAAML,EAAW,uCAE7BE,GAAaM,WAAa,WACxB,GAAIC,EAEJ,KADAA,KACOR,EAAUvB,EAAmBgC,KAAKR,EAAaI,MACpDG,EAAQpB,KAAKY,EAAQ,GAEvB,OAAOQ,MAETN,EAAcD,EAAaI,IAAIK,QAAQlC,EAAuB,IAC9DyB,EAAaU,eAAiBxC,EAAEyC,SAASV,EAAa,MACpDW,YAAapC,IAEfwB,EAAaa,YAAchB,EAAMZ,OAAO6B,eAAed,EAAaI,KACpEP,EAAMZ,OAAO8B,MAAMf,EAAaa,YAAaf,EAAU,WACrDD,EAAMmB,sBAAsBlB,EAAUE,EAAciB,MAAMC,MAAM,KAAMC,cAG1E,MAAOtB,GAAMuB,SAAS1C,EAAcoB,EAAU,SAASuB,EAAQC,GAC7DzB,EAAM0B,0BAA0BzB,EAAUE,EAAcqB,EAAQC,OAGnElC,QAGLf,EAAQmB,UAAUwB,sBAAwB,SAASlB,EAAUE,EAAcqB,GACzE,GAAIG,EACA5C,IAAaQ,KAAKqC,mBAAqB7C,EACzCQ,KAAKsC,oBAAoB5B,EAAUE,EAAcqB,GAEjDjC,KAAKmC,0BAA0BzB,EAAUE,EAAcqB,KAAYG,GAAoB,GAEzF5C,EAAY,MAGdP,EAAQmB,UAAUkC,oBAAsB,SAAS5B,EAAUE,EAAcqB,GACvE,GAAIM,EAEJ,IADAlD,EAAiBW,KACbY,EAAa4B,WAAY,CAC3BxC,KAAKyC,QAAQ,aACbzC,KAAKyC,QAAQ,aAAe/B,EAAUuB,EACtC,KACEjC,KAAKY,EAAa4B,YAAYV,MAAM9B,KAAMiC,GAC1CjC,KAAKyC,QAAQ,eACbzC,KAAKyC,QAAQ,eAAiB/B,EAAUuB,GACxC,MAAOS,GACPH,EAAQG,EACR1C,KAAKyC,QAAQ,YAAaF,GAC1BvC,KAAKyC,QAAQ,aAAe/B,EAAUuB,EAAQM,MAKpDtD,EAAQmB,UAAU+B,0BAA4B,SAASzB,EAAUE,EAAcqB,EAAQC,EAAmBE,GACxG,GAAIO,GAAMJ,EAAOzC,EAAS8C,EAAcC,EAAa7B,CAgBrD,IAfyB,MAArBkB,IACFA,MAEuB,MAArBE,IACFA,GAAoB,GAEY,MAA9BF,EAAkBY,WACpBZ,EAAkBY,UAAW,GAE3BzD,GAAkBA,IAAmBW,MACvCX,EAAeoD,QAAQ,QAEzBpD,EAAiBW,KACjBA,KAAKyC,QAAQ,mBACbzC,KAAKyC,QAAQ,mBAAqB/B,GAC9BE,EAAaI,IAAK,CACpB,GAAIiB,YAAkBJ,OACpBe,EAAe9D,EAAEiE,OAAOnC,EAAaM,WAAYe,GACjDY,EAAc/D,EAAEkE,KAAKf,GACrBjB,EAAMJ,EAAaU,eAAesB,GAC9BC,IAEA7B,GADEA,EAAIiC,QAAQ,KAAO,GACd,IAEA,IAETjC,GAAO6B,IAEJT,GAAqBF,EAAkBY,UAC1C9C,KAAKH,OAAOiD,SAAS9B,GAEvB2B,EAAO7D,EAAEoE,IAAIpE,EAAEqE,QAAQlB,GAASmB,QAChCT,EAAK5C,KAAK8C,OACL,CAAA,KAAIZ,YAAkBoB,SAO3B,KAAM,IAAItC,OAAM,0EANhBC,GAAMJ,EAAaU,eAAeW,IAC7BG,GAAqBF,EAAkBY,UAC1C9C,KAAKH,OAAOiD,SAAS9B,GAEvB2B,EAAO3C,KAAKH,OAAOyD,mBAAmB1C,EAAaa,YAAaT,GAIlElB,GACEkB,IAAKA,GAEP2B,EAAK5C,KAAKD,OAEV6C,GAAOV,CAET,KACEjC,KAAKY,EAAaE,kBAAkBgB,MAAM9B,KAAM2C,GAChD3C,KAAKyC,QAAQ,qBACbzC,KAAKyC,QAAQ,qBAAuB/B,GACpC,MAAOgC,GACPH,EAAQG,EACR1C,KAAKyC,QAAQ,kBAAmBF,GAChCvC,KAAKyC,QAAQ,mBAAqB/B,EAAU6B,KAIhDtD,EAAQmB,UAAUF,aAAe,WAC/BpB,EAAEyB,KAAKzB,EAAE0B,KAAKR,KAAKM,QAAS,SAAUG,GACpC,MAAO,UAAS8C,GACd9C,EAAM+C,GAAGD,EAAW9C,EAAMA,EAAMH,OAAOiD,OAExCvD,QAGLf,EAAQmB,UAAUqD,mBAAqB,SAASzC,GAC9C,GAAI2B,GAAMjC,CAOV,OANAA,GAAW5B,EAAE4E,KAAK5E,EAAE0B,KAAKR,KAAKK,QAAQsD,UAAW,SAAUlD,GACzD,MAAO,UAASC,GACd,GAAIkD,EACJ,OAAqD,QAA7CA,EAAMnD,EAAMJ,OAAOK,GAAUe,aAAuBmC,EAAIC,KAAK7C,GAAO,SAE7EhB,OACCU,GACFiC,EAAO3C,KAAKH,OAAOyD,mBAAmBtD,KAAKK,OAAOK,GAAUe,YAAaT,IAEvE8C,MAAOpD,EACPuB,OAAQU,IAJZ,QASF1D,EAAQmB,UAAUiC,eAAiB,WACjC,MAAiB,OAAVrD,EAAiBA,EAAOW,SAASC,KAAO,QAGjDX,EAAQ8E,GAAK,SAASD,EAAO7B,EAAQC,GAOnC,MANKD,KACHA,MAEEA,YAAkBJ,QACpBI,EAAOlC,KAAK,MAEPT,EAAamD,QAAQqB,EAAO7B,EAAQC,IAG7CjD,EAAQ+E,QAAU,SAAShD,EAAKkB,GAC9B,GAAID,GAAQgC,EAAWC,EAAMJ,EAAOK,CAepC,OAdAA,GAAYC,SAASC,cAAc,KACnCF,EAAUvE,KAAOoB,EACjBkD,EAAOC,EAAUG,SAASjD,QAAQ,MAAO,IAAM8C,EAAUI,OACzDN,EAAY,KACZnF,EAAE4E,KAAKnE,EAASiF,QAAQb,UAAW,SAASc,GAC1C,MAAOR,GAAYQ,EAAQhB,mBAAmBS,KAE5CD,GACFH,EAAQG,EAAUH,MAClB7B,EAASgC,EAAUhC,SAEnB6B,EAAQ,IACR7B,GAAUiC,IAELjF,EAAQ8E,GAAGD,EAAO7B,EAAQC,IAGnCjD,EAAQQ,OAASZ,EAAS6F,MAAMjF,OAEhCR,EAAQ0F,UAED1F,KAGTJ,EAASI,QAAUA,EACnBC,EAAuB,SAAS0F,GAC9B,GAAIC,GAAS5C,EAAQ6B,EAAOgB,EAAWC,EAAW7C,CAC7C0C,GAAMI,uBACTH,EAAU9F,EAAE6F,EAAMK,eAClBH,EAAYD,EAAQK,KAAK,iBACzBhD,EAAoB2C,EAAQK,KAAK,oBAAsB,KACvDN,EAAMO,iBACY,KAAdL,EACF7F,EAAQ+E,QAAQY,EAAMK,cAAcrF,KAAMwF,KAAKC,MAAMnD,KAErD6C,EAAYD,EAAUQ,MAAM,IAAK,GACjCxB,EAAQiB,EAAU,GAClB9C,KACI8C,EAAUQ,OAAS,GAAKR,EAAU,GAAGQ,OAAS,IAChDtD,EAASmD,KAAKC,MAAMN,EAAU,GAAGP,MAAM,EAAGO,EAAU,GAAG9B,QAAQ,QAE7DhB,YAAkBJ,QACpBI,EAAOlC,KAAK,OAGhBT,EAAamD,QAAQqB,EAAO7B,EAAQmD,KAAKC,MAAMnD,MAGnDnD,EAAEC,EAAOoF,UAAUZ,GAAG,QAAS,mBAAoB,SAASoB,GAC1D,MAAO1F,GAAqB0F,MAG7B/F,SAAUC,EAAGC,EAAGC","file":"backbone.manager-min.js","sourcesContent":["/**\n * Backbone.Manager - State-Based Routing/Control Manager for Backbone\n * @version v2.0.2\n * @link https://github.com/novu/backbone.manager\n * @author Johnathon Sanders\n * @license MIT\n */\n(function(Backbone, _, $, window) {\n  var Manager, _watchForStateChange, cachedOptionalMatcher, cachedParamMatcher, currentManager, managerQueue, managers, onloadUrl;\n  managers = [];\n  managerQueue = _.extend({}, Backbone.Events);\n  onloadUrl = window.location.href;\n  cachedParamMatcher = /[:*]([^(:?)\\/]+)/g;\n  cachedOptionalMatcher = /\\(.*\\)/g;\n  currentManager = null;\n  Manager = (function() {\n    Manager.prototype.states = {};\n\n    Manager.prototype.events = {};\n\n    function Manager(router, options) {\n      managers.push(this);\n      this.router = router;\n      _.extend(this, Backbone.Events);\n      this._parseStates();\n      this._parseEvents();\n      this.initialize(options);\n      return;\n    }\n\n    Manager.prototype.initialize = function() {};\n\n    Manager.prototype._parseStates = function() {\n      _.each(_.keys(this.states), (function(_this) {\n        return function(stateKey) {\n          var matches, stateOptions, templateUrl;\n          stateOptions = _this.states[stateKey];\n          if (!stateOptions.transitionMethod) {\n            throw new Error(stateKey + ' needs transitionMethod definitions');\n          }\n          if (stateOptions.url) {\n            if (_.isRegExp(stateOptions.url)) {\n              throw new Error(stateKey + ' is not allowed to have a RegExp url');\n            }\n            stateOptions._urlParams = (function() {\n              var results;\n              results = [];\n              while (matches = cachedParamMatcher.exec(stateOptions.url)) {\n                results.push(matches[1]);\n              }\n              return results;\n            })();\n            templateUrl = stateOptions.url.replace(cachedOptionalMatcher, '');\n            stateOptions._urlAsTemplate = _.template(templateUrl, null, {\n              interpolate: cachedParamMatcher\n            });\n            stateOptions._urlAsRegex = _this.router._routeToRegExp(stateOptions.url);\n            _this.router.route(stateOptions._urlAsRegex, stateKey, function() {\n              _this._routeCallbackChooser(stateKey, stateOptions, Array.apply(null, arguments));\n            });\n          }\n          return _this.listenTo(managerQueue, stateKey, function(params, transitionOptions) {\n            _this._handleTransitionCallback(stateKey, stateOptions, params, transitionOptions);\n          });\n        };\n      })(this));\n    };\n\n    Manager.prototype._routeCallbackChooser = function(stateKey, stateOptions, params) {\n      var historyHasUpdated;\n      if (onloadUrl && this._getWindowHref() === onloadUrl) {\n        this._handleLoadCallback(stateKey, stateOptions, params);\n      } else {\n        this._handleTransitionCallback(stateKey, stateOptions, params, {}, historyHasUpdated = true);\n      }\n      onloadUrl = null;\n    };\n\n    Manager.prototype._handleLoadCallback = function(stateKey, stateOptions, params) {\n      var error;\n      currentManager = this;\n      if (stateOptions.loadMethod) {\n        this.trigger('loadStart');\n        this.trigger('loadStart:' + stateKey, params);\n        try {\n          this[stateOptions.loadMethod].apply(this, params);\n          this.trigger('loadSuccess');\n          this.trigger('loadSuccess:' + stateKey, params);\n        } catch (_error) {\n          error = _error;\n          this.trigger('loadError', error);\n          this.trigger('loadError:' + stateKey, params, error);\n        }\n      }\n    };\n\n    Manager.prototype._handleTransitionCallback = function(stateKey, stateOptions, params, transitionOptions, historyHasUpdated) {\n      var data, error, options, paramsObject, queryParams, url;\n      if (transitionOptions == null) {\n        transitionOptions = {};\n      }\n      if (historyHasUpdated == null) {\n        historyHasUpdated = false;\n      }\n      if (transitionOptions.navigate == null) {\n        transitionOptions.navigate = true;\n      }\n      if (currentManager && currentManager !== this) {\n        currentManager.trigger('exit');\n      }\n      currentManager = this;\n      this.trigger('transitionStart');\n      this.trigger('transitionStart:' + stateKey);\n      if (stateOptions.url) {\n        if (params instanceof Array) {\n          paramsObject = _.object(stateOptions._urlParams, params);\n          queryParams = _.last(params);\n          url = stateOptions._urlAsTemplate(paramsObject);\n          if (queryParams) {\n            if (url.indexOf('?') > -1) {\n              url += '&';\n            } else {\n              url += '?';\n            }\n            url += queryParams;\n          }\n          if (!historyHasUpdated && transitionOptions.navigate) {\n            this.router.navigate(url);\n          }\n          data = _.map(_.initial(params), String);\n          data.push(queryParams);\n        } else if (params instanceof Object) {\n          url = stateOptions._urlAsTemplate(params);\n          if (!historyHasUpdated && transitionOptions.navigate) {\n            this.router.navigate(url);\n          }\n          data = this.router._extractParameters(stateOptions._urlAsRegex, url);\n        } else {\n          throw new Error('Params are only supported as an object or array if state.url is defined');\n        }\n        options = {\n          url: url\n        };\n        data.push(options);\n      } else {\n        data = params;\n      }\n      try {\n        this[stateOptions.transitionMethod].apply(this, data);\n        this.trigger('transitionSuccess');\n        this.trigger('transitionSuccess:' + stateKey);\n      } catch (_error) {\n        error = _error;\n        this.trigger('transitionError', error);\n        this.trigger('transitionError:' + stateKey, error);\n      }\n    };\n\n    Manager.prototype._parseEvents = function() {\n      _.each(_.keys(this.events), (function(_this) {\n        return function(eventName) {\n          _this.on(eventName, _this[_this.events[eventName]]);\n        };\n      })(this));\n    };\n\n    Manager.prototype._parseStateFromUrl = function(url) {\n      var data, stateKey;\n      stateKey = _.find(_.keys(this.states).reverse(), (function(_this) {\n        return function(stateKey) {\n          var ref;\n          return (ref = _this.states[stateKey]._urlAsRegex) != null ? ref.test(url) : void 0;\n        };\n      })(this));\n      if (stateKey) {\n        data = this.router._extractParameters(this.states[stateKey]._urlAsRegex, url);\n        return {\n          state: stateKey,\n          params: data\n        };\n      }\n    };\n\n    Manager.prototype._getWindowHref = function() {\n      return window != null ? window.location.href : void 0;\n    };\n\n    Manager.go = function(state, params, transitionOptions) {\n      if (!params) {\n        params = [];\n      }\n      if (params instanceof Array) {\n        params.push(null);\n      }\n      return managerQueue.trigger(state, params, transitionOptions);\n    };\n\n    Manager.goByUrl = function(url, transitionOptions) {\n      var params, parsedUrl, path, state, urlParser;\n      urlParser = document.createElement('a');\n      urlParser.href = url;\n      path = urlParser.pathname.replace(/^\\//, '') + urlParser.search;\n      parsedUrl = null;\n      _.find(managers.slice().reverse(), function(manager) {\n        return parsedUrl = manager._parseStateFromUrl(path);\n      });\n      if (parsedUrl) {\n        state = parsedUrl.state;\n        params = parsedUrl.params;\n      } else {\n        state = '*';\n        params = [path];\n      }\n      return Manager.go(state, params, transitionOptions);\n    };\n\n    Manager.extend = Backbone.Model.extend;\n\n    Manager.config = {};\n\n    return Manager;\n\n  })();\n  Backbone.Manager = Manager;\n  _watchForStateChange = function(event) {\n    var $target, params, state, stateAttr, stateInfo, transitionOptions;\n    if (!event.isDefaultPrevented()) {\n      $target = $(event.currentTarget);\n      stateAttr = $target.attr('data-bb-state');\n      transitionOptions = $target.attr('data-bb-options') || '{}';\n      event.preventDefault();\n      if (stateAttr === '') {\n        Manager.goByUrl(event.currentTarget.href, JSON.parse(transitionOptions));\n      } else {\n        stateInfo = stateAttr.split('(', 2);\n        state = stateInfo[0];\n        params = [];\n        if (stateInfo.length > 1 && stateInfo[1].length > 2) {\n          params = JSON.parse(stateInfo[1].slice(0, stateInfo[1].indexOf(')')));\n        }\n        if (params instanceof Array) {\n          params.push(null);\n        }\n      }\n      managerQueue.trigger(state, params, JSON.parse(transitionOptions));\n    }\n  };\n  $(window.document).on('click', 'a[data-bb-state]', function(event) {\n    return _watchForStateChange(event);\n  });\n;\n})(Backbone, _, $, window);\n"],"sourceRoot":"/source/"}