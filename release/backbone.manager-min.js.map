{"version":3,"file":"backbone.manager-min.js","sources":["backbone.manager.js"],"names":["Backbone","_","$","window","Manager","cachedParamMatcher","cachedPathSegmentMatcher","managerQueue","onloadUrl","_watchForStateChange","extend","Events","location","href","router","options","this","_parseStates","_parseEvents","initialize","prototype","states","events","each","keys","_this","stateKey","matches","stateOptions","templateUrl","transitionMethod","Error","url","isRegExp","_urlParams","_results","exec","push","replace","_urlAsTemplate","template","interpolate","_urlAsRegex","_routeToRegExp","route","_routeCallbackChooser","Array","apply","arguments","listenTo","args","_handleTransitionCallback","historyHasUpdated","_getWindowHref","_handleLoadCallback","loadMethod","trigger","argsObject","data","object","navigate","map","initial","String","last","Object","_extractParameters","eventName","on","go","state","Model","config","urlToStateParser","urlPath","segments","stateObj","segment","i","length","event","parsed","stateAttr","stateInfo","urlParser","isDefaultPrevented","target","attr","preventDefault","document","createElement","pathname","_events","search","split","JSON","parse","slice","indexOf"],"mappings":"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","sourcesContent":["/**\n * Backbone.Manager - State-Based Routing/Control Manager for Backbone\n * @version v0.1.3\n * @link https://github.com/novu/backbone.manager\n * @author Johnathon Sanders\n * @license MIT\n */\n(function(Backbone, _, $, window) {\n  var Manager, cachedParamMatcher, cachedPathSegmentMatcher, managerQueue, onloadUrl, _watchForStateChange;\n  managerQueue = _.extend({}, Backbone.Events);\n  onloadUrl = window.location.href;\n  cachedParamMatcher = /[:*]([^:)/]+)/g;\n  cachedPathSegmentMatcher = /([^/]+)/g;\n  Manager = (function() {\n    Manager.prototype.states = {};\n\n    Manager.prototype.events = {};\n\n    function Manager(router, options) {\n      this.router = router;\n      _.extend(this, Backbone.Events);\n      this._parseStates();\n      this._parseEvents();\n      this.initialize(options);\n      return;\n    }\n\n    Manager.prototype.initialize = function() {};\n\n    Manager.prototype._parseStates = function() {\n      _.each(_.keys(this.states), (function(_this) {\n        return function(stateKey) {\n          var matches, stateOptions, templateUrl;\n          stateOptions = _this.states[stateKey];\n          if (!stateOptions.transitionMethod) {\n            throw new Error(stateKey + ' needs transitionMethod definitions');\n          }\n          if (stateOptions.url) {\n            if (_.isRegExp(stateOptions.url)) {\n              throw new Error(stateKey + ' is not allowed to have a RegExp url');\n            }\n            stateOptions._urlParams = (function() {\n              var _results;\n              _results = [];\n              while (matches = cachedParamMatcher.exec(stateOptions.url)) {\n                _results.push(matches[1]);\n              }\n              return _results;\n            })();\n            templateUrl = stateOptions.url.replace(/\\(.*\\)/g, '');\n            stateOptions._urlAsTemplate = _.template(templateUrl, null, {\n              interpolate: cachedParamMatcher\n            });\n            stateOptions._urlAsRegex = _this.router._routeToRegExp(stateOptions.url);\n            _this.router.route(stateOptions._urlAsRegex, stateKey, function() {\n              _this._routeCallbackChooser(stateKey, stateOptions, Array.apply(null, arguments));\n            });\n          }\n          return _this.listenTo(managerQueue, stateKey, function(args) {\n            _this._handleTransitionCallback(stateKey, stateOptions, args);\n          });\n        };\n      })(this));\n    };\n\n    Manager.prototype._routeCallbackChooser = function(stateKey, stateOptions, args) {\n      var historyHasUpdated;\n      if (onloadUrl && this._getWindowHref() === onloadUrl) {\n        this._handleLoadCallback(stateKey, stateOptions, args);\n      } else {\n        this._handleTransitionCallback(stateKey, stateOptions, args, historyHasUpdated = true);\n      }\n      onloadUrl = null;\n    };\n\n    Manager.prototype._handleLoadCallback = function(stateKey, stateOptions, args) {\n      if (stateOptions.loadMethod) {\n        this.trigger('pre-load');\n        this.trigger('pre-load:' + stateKey, args);\n        this[stateOptions.loadMethod].apply(this, args);\n        this.trigger('post-load:' + stateKey, args);\n        this.trigger('post-load');\n      }\n    };\n\n    Manager.prototype._handleTransitionCallback = function(stateKey, stateOptions, args, historyHasUpdated) {\n      var argsObject, data, options, url;\n      if (historyHasUpdated == null) {\n        historyHasUpdated = false;\n      }\n      this.trigger('pre-transition');\n      this.trigger('pre-transition:' + stateKey);\n      if (stateOptions.url) {\n        if (args instanceof Array) {\n          argsObject = _.object(stateOptions._urlParams, args);\n          url = stateOptions._urlAsTemplate(argsObject);\n          if (!historyHasUpdated) {\n            this.router.navigate(url);\n          }\n          data = _.map(_.initial(args), String);\n          data.push(_.last(args));\n        } else if (args instanceof Object) {\n          url = stateOptions._urlAsTemplate(args);\n          if (!historyHasUpdated) {\n            this.router.navigate(url);\n          }\n          data = this.router._extractParameters(stateOptions._urlAsRegex, url);\n        } else {\n          throw new Error('Args are only supported as an object or array if state.url is defined');\n        }\n        options = {\n          url: url\n        };\n        data.push(options);\n      } else {\n        data = args;\n      }\n      this[stateOptions.transitionMethod].apply(this, data);\n      this.trigger('post-transition:' + stateKey);\n      this.trigger('post-transition');\n    };\n\n    Manager.prototype._parseEvents = function() {\n      _.each(_.keys(this.events), (function(_this) {\n        return function(eventName) {\n          _this.on(eventName, _this[_this.events[eventName]]);\n        };\n      })(this));\n    };\n\n    Manager.prototype._getWindowHref = function() {\n      return window != null ? window.location.href : void 0;\n    };\n\n    Manager.go = function(state, args) {\n      return managerQueue.trigger(state, args);\n    };\n\n    Manager.extend = Backbone.Model.extend;\n\n    Manager.config = {\n      urlToStateParser: function(urlPath) {\n        var matches, segments, stateObj;\n        stateObj = {\n          state: '',\n          args: []\n        };\n        segments = (function() {\n          var _results;\n          _results = [];\n          while (matches = cachedPathSegmentMatcher.exec(urlPath)) {\n            _results.push(matches[1]);\n          }\n          return _results;\n        })();\n        _.each(segments, function(segment, i) {\n          if (i % 2) {\n            stateObj.args.push(segments[i]);\n            stateObj.state += 'detail';\n          } else {\n            stateObj.state += segments[i];\n          }\n          if (i !== segments.length - 1) {\n            return stateObj.state += '.';\n          }\n        });\n        return stateObj;\n      }\n    };\n\n    return Manager;\n\n  })();\n  Backbone.Manager = Manager;\n  _watchForStateChange = function(event) {\n    var args, parsed, state, stateAttr, stateInfo, urlParser;\n    if (!event.isDefaultPrevented()) {\n      stateAttr = $(event.target).attr('data-bb-state');\n      event.preventDefault();\n      if (stateAttr === '') {\n        urlParser = document.createElement('a');\n        urlParser.href = event.target.href;\n        parsed = Backbone.Manager.config.urlToStateParser(urlParser.pathname);\n        if (managerQueue._events[parsed.state]) {\n          state = parsed.state;\n          args = parsed.args;\n          args.push(urlParser.search);\n        } else {\n          state = '*';\n          args = [urlParser.pathname];\n        }\n      } else {\n        stateInfo = stateAttr.split('(', 2);\n        state = stateInfo[0];\n        args = [];\n        if (stateInfo.length > 1 && stateInfo[1].length > 2) {\n          args = JSON.parse(stateInfo[1].slice(0, stateInfo[1].indexOf(')')));\n        }\n        if (args instanceof Array) {\n          args.push(null);\n        }\n      }\n      managerQueue.trigger(state, args);\n    }\n  };\n  $(window.document).on('click', 'a[data-bb-state]', function(event) {\n    return _watchForStateChange(event);\n  });\n;\n})(Backbone, _, $, window);\n"],"sourceRoot":"/source/"}