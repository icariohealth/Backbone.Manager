{"version":3,"file":"backbone.manager-min.js","sources":["backbone.manager.js"],"names":["Backbone","_","$","window","Manager","cachedParamMatcher","cachedPathSegmentMatcher","managerQueue","onloadUrl","_watchForStateChange","extend","Events","location","href","router","options","this","_parseStates","_parseEvents","initialize","prototype","states","events","each","keys","_this","stateKey","matches","stateOptions","transitionMethod","Error","url","isRegExp","_urlParams","_results","exec","push","_urlAsTemplate","template","interpolate","_urlAsRegex","_routeToRegExp","route","_routeCallbackChooser","Array","apply","arguments","listenTo","args","_handleTransitionCallback","historyHasUpdated","_getWindowHref","_handleLoadCallback","loadMethod","trigger","argsObject","data","object","navigate","map","initial","String","last","Object","_extractParameters","eventName","on","go","state","Model","config","urlToStateParser","urlPath","segments","stateObj","segment","i","length","event","parsed","stateAttr","stateInfo","urlParser","isDefaultPrevented","target","attr","preventDefault","document","createElement","pathname","_events","search","split","JSON","parse","slice","indexOf"],"mappings":"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","sourcesContent":["/**\n * Backbone.Manager - State-Based Routing/Control Manager for Backbone\n * @version v0.1.1\n * @link https://github.com/novu/backbone.manager\n * @author Johnathon Sanders\n * @license MIT\n */\n(function(Backbone, _, $, window) {\n  var Manager, cachedParamMatcher, cachedPathSegmentMatcher, managerQueue, onloadUrl, _watchForStateChange;\n  managerQueue = _.extend({}, Backbone.Events);\n  onloadUrl = window.location.href;\n  cachedParamMatcher = /[:*]([^:)/]+)/g;\n  cachedPathSegmentMatcher = /([^/]+)/g;\n  Manager = (function() {\n    Manager.prototype.states = {};\n\n    Manager.prototype.events = {};\n\n    function Manager(router, options) {\n      this.router = router;\n      _.extend(this, Backbone.Events);\n      this._parseStates();\n      this._parseEvents();\n      this.initialize(options);\n      return;\n    }\n\n    Manager.prototype.initialize = function() {};\n\n    Manager.prototype._parseStates = function() {\n      _.each(_.keys(this.states), (function(_this) {\n        return function(stateKey) {\n          var matches, stateOptions;\n          stateOptions = _this.states[stateKey];\n          if (!stateOptions.transitionMethod) {\n            throw new Error(stateKey + ' needs transitionMethod definitions');\n          }\n          if (stateOptions.url) {\n            if (_.isRegExp(stateOptions.url)) {\n              throw new Error(stateKey + ' is not allowed to have a RegExp url');\n            }\n            stateOptions._urlParams = (function() {\n              var _results;\n              _results = [];\n              while (matches = cachedParamMatcher.exec(stateOptions.url)) {\n                _results.push(matches[1]);\n              }\n              return _results;\n            })();\n            stateOptions._urlAsTemplate = _.template(stateOptions.url, null, {\n              interpolate: cachedParamMatcher\n            });\n            stateOptions._urlAsRegex = _this.router._routeToRegExp(stateOptions.url);\n            _this.router.route(stateOptions._urlAsRegex, stateKey, function() {\n              _this._routeCallbackChooser(stateKey, stateOptions, Array.apply(null, arguments));\n            });\n          }\n          return _this.listenTo(managerQueue, stateKey, function(args) {\n            _this._handleTransitionCallback(stateKey, stateOptions, args);\n          });\n        };\n      })(this));\n    };\n\n    Manager.prototype._routeCallbackChooser = function(stateKey, stateOptions, args) {\n      var historyHasUpdated;\n      if (onloadUrl && this._getWindowHref() === onloadUrl) {\n        this._handleLoadCallback(stateKey, stateOptions, args);\n      } else {\n        this._handleTransitionCallback(stateKey, stateOptions, args, historyHasUpdated = true);\n      }\n      onloadUrl = null;\n    };\n\n    Manager.prototype._handleLoadCallback = function(stateKey, stateOptions, args) {\n      if (stateOptions.loadMethod) {\n        this.trigger('pre-load');\n        this.trigger('pre-load:' + stateKey, args);\n        this[stateOptions.loadMethod].apply(this, args);\n        this.trigger('post-load:' + stateKey, args);\n        this.trigger('post-load');\n      }\n    };\n\n    Manager.prototype._handleTransitionCallback = function(stateKey, stateOptions, args, historyHasUpdated) {\n      var argsObject, data, options, url;\n      if (historyHasUpdated == null) {\n        historyHasUpdated = false;\n      }\n      this.trigger('pre-transition');\n      this.trigger('pre-transition:' + stateKey);\n      if (stateOptions.url) {\n        if (args instanceof Array) {\n          argsObject = _.object(stateOptions._urlParams, args);\n          url = stateOptions._urlAsTemplate(argsObject);\n          if (!historyHasUpdated) {\n            this.router.navigate(url);\n          }\n          data = _.map(_.initial(args), String);\n          data.push(_.last(args));\n        } else if (args instanceof Object) {\n          url = stateOptions._urlAsTemplate(args);\n          if (!historyHasUpdated) {\n            this.router.navigate(url);\n          }\n          data = this.router._extractParameters(stateOptions._urlAsRegex, url);\n        } else {\n          throw new Error('Args are only supported as an object or array if state.url is defined');\n        }\n        options = {\n          url: url\n        };\n        data.push(options);\n      } else {\n        data = args;\n      }\n      this[stateOptions.transitionMethod].apply(this, data);\n      this.trigger('post-transition:' + stateKey);\n      this.trigger('post-transition');\n    };\n\n    Manager.prototype._parseEvents = function() {\n      _.each(_.keys(this.events), (function(_this) {\n        return function(eventName) {\n          _this.on(eventName, _this[_this.events[eventName]]);\n        };\n      })(this));\n    };\n\n    Manager.prototype._getWindowHref = function() {\n      return window != null ? window.location.href : void 0;\n    };\n\n    Manager.go = function(state, args) {\n      return managerQueue.trigger(state, args);\n    };\n\n    Manager.extend = Backbone.Model.extend;\n\n    Manager.config = {\n      urlToStateParser: function(urlPath) {\n        var matches, segments, stateObj;\n        stateObj = {\n          state: '',\n          args: []\n        };\n        segments = (function() {\n          var _results;\n          _results = [];\n          while (matches = cachedPathSegmentMatcher.exec(urlPath)) {\n            _results.push(matches[1]);\n          }\n          return _results;\n        })();\n        _.each(segments, function(segment, i) {\n          if (i % 2) {\n            stateObj.args.push(segments[i]);\n            stateObj.state += 'detail';\n          } else {\n            stateObj.state += segments[i];\n          }\n          if (i !== segments.length - 1) {\n            return stateObj.state += '.';\n          }\n        });\n        return stateObj;\n      }\n    };\n\n    return Manager;\n\n  })();\n  Backbone.Manager = Manager;\n  _watchForStateChange = function(event) {\n    var args, parsed, state, stateAttr, stateInfo, urlParser;\n    if (!event.isDefaultPrevented()) {\n      stateAttr = $(event.target).attr('data-bb-state');\n      event.preventDefault();\n      if (stateAttr === '') {\n        urlParser = document.createElement('a');\n        urlParser.href = event.target.href;\n        parsed = Backbone.Manager.config.urlToStateParser(urlParser.pathname);\n        if (managerQueue._events[parsed.state]) {\n          state = parsed.state;\n          args = parsed.args;\n          args.push(urlParser.search);\n        } else {\n          state = '*';\n          args = [urlParser.pathname];\n        }\n      } else {\n        stateInfo = stateAttr.split('(', 2);\n        state = stateInfo[0];\n        args = JSON.parse(stateInfo[1].slice(0, stateInfo[1].indexOf(')')));\n        if (args instanceof Array) {\n          args.push(null);\n        }\n      }\n      managerQueue.trigger(state, args);\n    }\n  };\n  $(window.document).on('click', 'a[data-bb-state]', function(event) {\n    return _watchForStateChange(event);\n  });\n;\n})(Backbone, _, $, window);\n"],"sourceRoot":"/source/"}